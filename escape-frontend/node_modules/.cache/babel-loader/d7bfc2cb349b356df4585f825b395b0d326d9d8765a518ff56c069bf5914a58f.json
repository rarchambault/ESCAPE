{"ast":null,"code":"// Mixins\nimport { inject as RegistrableInject } from '../registrable';\nexport function factory(namespace, child, parent) {\n  return RegistrableInject(namespace, child, parent).extend({\n    name: 'groupable',\n    props: {\n      activeClass: {\n        type: String,\n        default() {\n          if (!this[namespace]) return undefined;\n          return this[namespace].activeClass;\n        }\n      },\n      disabled: Boolean\n    },\n    data() {\n      return {\n        isActive: false\n      };\n    },\n    computed: {\n      groupClasses() {\n        if (!this.activeClass) return {};\n        return {\n          [this.activeClass]: this.isActive\n        };\n      }\n    },\n    created() {\n      this[namespace] && this[namespace].register(this);\n    },\n    beforeDestroy() {\n      this[namespace] && this[namespace].unregister(this);\n    },\n    methods: {\n      toggle() {\n        this.$emit('change');\n      }\n    }\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\nconst Groupable = factory('itemGroup');\nexport default Groupable;","map":{"version":3,"mappings":"AAAA;AACA,SAAsBA,MAAM,IAAIC,iBAAhC,QAAyD,gBAAzD;AAeA,OAAM,SAAUC,OAAV,CACJC,SADI,EAEJC,KAFI,EAGJC,MAHI,EAGW;EAEf,OAAOJ,iBAAiB,CAAOE,SAAP,EAAkBC,KAAlB,EAAyBC,MAAzB,CAAjB,CAAkDC,MAAlD,CAAyD;IAC9DC,IAAI,EAAE,WADwD;IAG9DC,KAAK,EAAE;MACLC,WAAW,EAAE;QACXC,IAAI,EAAEC,MADK;QAEXC,OAAO;UACL,IAAI,CAAC,KAAKT,SAAL,CAAL,EAAsB,OAAOU,SAAP;UAEtB,OAAO,KAAKV,SAAL,EAAgBM,WAAvB;QACD;MANU,CADR;MASLK,QAAQ,EAAEC;IATL,CAHuD;IAe9DC,IAAI;MACF,OAAO;QACLC,QAAQ,EAAE;MADL,CAAP;IAGD,CAnB6D;IAqB9DC,QAAQ,EAAE;MACRC,YAAY;QACV,IAAI,CAAC,KAAKV,WAAV,EAAuB,OAAO,EAAP;QAEvB,OAAO;UACL,CAAC,KAAKA,WAAN,GAAoB,KAAKQ;QADpB,CAAP;MAGD;IAPO,CArBoD;IA+B9DG,OAAO;MACL,KAAKjB,SAAL,KAAoB,KAAKA,SAAL,EAAwBkB,QAAxB,CAAiC,IAAjC,CAApB;IACD,CAjC6D;IAmC9DC,aAAa;MACX,KAAKnB,SAAL,KAAoB,KAAKA,SAAL,EAAwBoB,UAAxB,CAAmC,IAAnC,CAApB;IACD,CArC6D;IAuC9DC,OAAO,EAAE;MACPC,MAAM;QACJ,KAAKC,KAAL,CAAW,QAAX;MACD;IAHM;EAvCqD,CAAzD,CAAP;AA6CD;AAED;;AACA,MAAMC,SAAS,GAAGzB,OAAO,CAAC,WAAD,CAAzB;AAEA,eAAeyB,SAAf","names":["inject","RegistrableInject","factory","namespace","child","parent","extend","name","props","activeClass","type","String","default","undefined","disabled","Boolean","data","isActive","computed","groupClasses","created","register","beforeDestroy","unregister","methods","toggle","$emit","Groupable"],"sourceRoot":"","sources":["../../../src/mixins/groupable/index.ts"],"sourcesContent":["// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}