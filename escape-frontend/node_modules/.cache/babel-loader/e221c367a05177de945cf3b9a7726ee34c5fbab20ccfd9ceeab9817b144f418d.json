{"ast":null,"code":"import OurVue from 'vue';\nimport { consoleError } from './util/console';\nexport function install(Vue, args = {}) {\n  if (install.installed) return;\n  install.installed = true;\n  if (OurVue !== Vue) {\n    consoleError(`Multiple instances of Vue detected\nSee https://github.com/vuetifyjs/vuetify/issues/4068\n\nIf you're seeing \"$attrs is readonly\", it's caused by this`);\n  }\n  const components = args.components || {};\n  const directives = args.directives || {};\n  for (const name in directives) {\n    const directive = directives[name];\n    Vue.directive(name, directive);\n  }\n  (function registerComponents(components) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key];\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component);\n        }\n      }\n      return true;\n    }\n    return false;\n  })(components); // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n\n  if (Vue.$_vuetify_installed) return;\n  Vue.$_vuetify_installed = true;\n  Vue.mixin({\n    beforeCreate() {\n      const options = this.$options;\n      if (options.vuetify) {\n        options.vuetify.init(this, this.$ssrContext);\n        this.$vuetify = Vue.observable(options.vuetify.framework);\n      } else {\n        this.$vuetify = options.parent && options.parent.$vuetify || this;\n      }\n    },\n    beforeMount() {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$el && this.$el.hasAttribute('data-server-rendered')) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = true; // @ts-ignore\n\n        this.$vuetify.breakpoint.update(true);\n      }\n    },\n    mounted() {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$vuetify.isHydrating) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = false; // @ts-ignore\n\n        this.$vuetify.breakpoint.update();\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,OAAOA,MAAP,MAAuC,KAAvC;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAM,SAAUC,OAAV,CAAmBC,GAAnB,EAAwCC,OAA0B,EAAlE,EAAoE;EACxE,IAAKF,OAAe,CAACG,SAArB,EAAgC;EAC/BH,OAAe,CAACG,SAAhB,GAA4B,IAA5B;EAED,IAAIL,MAAM,KAAKG,GAAf,EAAoB;IAClBF,YAAY,CAAC;;;AAG0C,2DAH3C,CAAZ;EAID;EAED,MAAMK,UAAU,GAAGF,IAAI,CAACE,UAAL,IAAmB,EAAtC;EACA,MAAMC,UAAU,GAAGH,IAAI,CAACG,UAAL,IAAmB,EAAtC;EAEA,KAAK,MAAMC,IAAX,IAAmBD,UAAnB,EAA+B;IAC7B,MAAME,SAAS,GAAGF,UAAU,CAACC,IAAD,CAA5B;IAEAL,GAAG,CAACM,SAAJ,CAAcD,IAAd,EAAoBC,SAApB;EACD;EAED,CAAC,SAASC,kBAAT,CAA6BJ,UAA7B,EAA4C;IAC3C,IAAIA,UAAJ,EAAgB;MACd,KAAK,MAAMK,GAAX,IAAkBL,UAAlB,EAA8B;QAC5B,MAAMM,SAAS,GAAGN,UAAU,CAACK,GAAD,CAA5B;QACA,IAAIC,SAAS,IAAI,CAACF,kBAAkB,CAACE,SAAS,CAACC,uBAAX,CAApC,EAAyE;UACvEV,GAAG,CAACS,SAAJ,CAAcD,GAAd,EAAmBC,SAAnB;QACD;MACF;MACD,OAAO,IAAP;IACD;IACD,OAAO,KAAP;EACD,CAXD,EAWGN,UAXH,EApBwE,CAiCxE;EACA;EACA;;EACA,IAAIH,GAAG,CAACW,mBAAR,EAA6B;EAC7BX,GAAG,CAACW,mBAAJ,GAA0B,IAA1B;EAEAX,GAAG,CAACY,KAAJ,CAAU;IACRC,YAAY;MACV,MAAMC,OAAO,GAAG,KAAKC,QAArB;MAEA,IAAID,OAAO,CAACE,OAAZ,EAAqB;QACnBF,OAAO,CAACE,OAAR,CAAgBC,IAAhB,CAAqB,IAArB,EAA2B,KAAKC,WAAhC;QACA,KAAKC,QAAL,GAAgBnB,GAAG,CAACoB,UAAJ,CAAeN,OAAO,CAACE,OAAR,CAAgBK,SAA/B,CAAhB;MACD,CAHD,MAGO;QACL,KAAKF,QAAL,GAAiBL,OAAO,CAACQ,MAAR,IAAkBR,OAAO,CAACQ,MAAR,CAAeH,QAAlC,IAA+C,IAA/D;MACD;IACF,CAVO;IAWRI,WAAW;MACT;MACA,IAAI,KAAKR,QAAL,CAAcC,OAAd,IAAyB,KAAKQ,GAA9B,IAAqC,KAAKA,GAAL,CAASC,YAAT,CAAsB,sBAAtB,CAAzC,EAAwF;QACtF;QACA,KAAKN,QAAL,CAAcO,WAAd,GAA4B,IAA5B,CAFsF,CAGtF;;QACA,KAAKP,QAAL,CAAcQ,UAAd,CAAyBC,MAAzB,CAAgC,IAAhC;MACD;IACF,CAnBO;IAoBRC,OAAO;MACL;MACA,IAAI,KAAKd,QAAL,CAAcC,OAAd,IAAyB,KAAKG,QAAL,CAAcO,WAA3C,EAAwD;QACtD;QACA,KAAKP,QAAL,CAAcO,WAAd,GAA4B,KAA5B,CAFsD,CAGtD;;QACA,KAAKP,QAAL,CAAcQ,UAAd,CAAyBC,MAAzB;MACD;IACF;EA5BO,CAAV;AA8BD","names":["OurVue","consoleError","install","Vue","args","installed","components","directives","name","directive","registerComponents","key","component","$_vuetify_subcomponents","$_vuetify_installed","mixin","beforeCreate","options","$options","vuetify","init","$ssrContext","$vuetify","observable","framework","parent","beforeMount","$el","hasAttribute","isHydrating","breakpoint","update","mounted"],"sourceRoot":"","sources":["../src/install.ts"],"sourcesContent":["import OurVue, { VueConstructor } from 'vue'\nimport { VuetifyUseOptions } from 'vuetify/types'\nimport { consoleError } from './util/console'\n\nexport function install (Vue: VueConstructor, args: VuetifyUseOptions = {}) {\n  if ((install as any).installed) return\n  (install as any).installed = true\n\n  if (OurVue !== Vue) {\n    consoleError(`Multiple instances of Vue detected\nSee https://github.com/vuetifyjs/vuetify/issues/4068\n\nIf you're seeing \"$attrs is readonly\", it's caused by this`)\n  }\n\n  const components = args.components || {}\n  const directives = args.directives || {}\n\n  for (const name in directives) {\n    const directive = directives[name]\n\n    Vue.directive(name, directive)\n  }\n\n  (function registerComponents (components: any) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key]\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component as typeof Vue)\n        }\n      }\n      return true\n    }\n    return false\n  })(components)\n\n  // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n  if (Vue.$_vuetify_installed) return\n  Vue.$_vuetify_installed = true\n\n  Vue.mixin({\n    beforeCreate () {\n      const options = this.$options as any\n\n      if (options.vuetify) {\n        options.vuetify.init(this, this.$ssrContext)\n        this.$vuetify = Vue.observable(options.vuetify.framework)\n      } else {\n        this.$vuetify = (options.parent && options.parent.$vuetify) || this\n      }\n    },\n    beforeMount () {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$el && this.$el.hasAttribute('data-server-rendered')) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = true\n        // @ts-ignore\n        this.$vuetify.breakpoint.update(true)\n      }\n    },\n    mounted () {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$vuetify.isHydrating) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = false\n        // @ts-ignore\n        this.$vuetify.breakpoint.update()\n      }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}