{"ast":null,"code":"// Utilities\nimport { removed } from '../../util/console'; // Types\n\nimport Vue from 'vue';\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    eager: Boolean\n  },\n  data: () => ({\n    isBooted: false\n  }),\n  computed: {\n    hasContent() {\n      return this.isBooted || this.eager || this.isActive;\n    }\n  },\n  watch: {\n    isActive() {\n      this.isBooted = true;\n    }\n  },\n  created() {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this);\n    }\n  },\n  methods: {\n    showLazyContent(content) {\n      return this.hasContent && content ? content() : [this.$createElement()];\n    }\n  }\n});","map":{"version":3,"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,oBAAxB,C,CAEA;;AACA,OAAOC,GAAP,MAA2B,KAA3B;AAKA;;;;;;;AAOG;;AACH;;AACA,eAAeA,GAAG,CAACC,MAAJ,GAA+BA,MAA/B,CAAsC;EACnDC,IAAI,EAAE,UAD6C;EAGnDC,KAAK,EAAE;IACLC,KAAK,EAAEC;EADF,CAH4C;EAOnDC,IAAI,EAAE,OAAO;IACXC,QAAQ,EAAE;EADC,CAAP,CAP6C;EAWnDC,QAAQ,EAAE;IACRC,UAAU;MACR,OAAO,KAAKF,QAAL,IAAiB,KAAKH,KAAtB,IAA+B,KAAKM,QAA3C;IACD;EAHO,CAXyC;EAiBnDC,KAAK,EAAE;IACLD,QAAQ;MACN,KAAKH,QAAL,GAAgB,IAAhB;IACD;EAHI,CAjB4C;EAuBnDK,OAAO;IACL;IACA,IAAI,UAAU,KAAKC,MAAnB,EAA2B;MACzBd,OAAO,CAAC,MAAD,EAAS,IAAT,CAAP;IACD;EACF,CA5BkD;EA8BnDe,OAAO,EAAE;IACPC,eAAe,CAAEC,OAAF,EAAyB;MACtC,OAAQ,KAAKP,UAAL,IAAmBO,OAApB,GAA+BA,OAAO,EAAtC,GAA2C,CAAC,KAAKC,cAAL,EAAD,CAAlD;IACD;EAHM;AA9B0C,CAAtC,CAAf","names":["removed","Vue","extend","name","props","eager","Boolean","data","isBooted","computed","hasContent","isActive","watch","created","$attrs","methods","showLazyContent","content","$createElement"],"sourceRoot":"","sources":["../../../src/mixins/bootable/index.ts"],"sourcesContent":["// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}