{"ast":null,"code":"function inserted(el, binding, vnode) {\n  const {\n    self = false\n  } = binding.modifiers || {};\n  const value = binding.value;\n  const options = typeof value === 'object' && value.options || {\n    passive: true\n  };\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler;\n  const target = self ? el : binding.arg ? document.querySelector(binding.arg) : window;\n  if (!target) return;\n  target.addEventListener('scroll', handler, options);\n  el._onScroll = Object(el._onScroll);\n  el._onScroll[vnode.context._uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target\n  };\n}\nfunction unbind(el, binding, vnode) {\n  var _a;\n  if (!((_a = el._onScroll) === null || _a === void 0 ? void 0 : _a[vnode.context._uid])) return;\n  const {\n    handler,\n    options,\n    target = el\n  } = el._onScroll[vnode.context._uid];\n  target.removeEventListener('scroll', handler, options);\n  delete el._onScroll[vnode.context._uid];\n}\nexport const Scroll = {\n  inserted,\n  unbind\n};\nexport default Scroll;","map":{"version":3,"mappings":"AAaA,SAASA,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAmEC,KAAnE,EAA+E;EAC7E,MAAM;IAAEC,IAAI,GAAG;EAAT,IAAmBF,OAAO,CAACG,SAAR,IAAqB,EAA9C;EACA,MAAMC,KAAK,GAAGJ,OAAO,CAACI,KAAtB;EACA,MAAMC,OAAO,GAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAApC,IAAgD;IAAEC,OAAO,EAAE;EAAX,CAAhE;EACA,MAAMC,OAAO,GAAG,OAAOH,KAAP,KAAiB,UAAjB,IAA+B,iBAAiBA,KAAhD,GAAwDA,KAAxD,GAAgEA,KAAK,CAACG,OAAtF;EAEA,MAAMC,MAAM,GAAGN,IAAI,GACfH,EADe,GAEfC,OAAO,CAACS,GAAR,GACEC,QAAQ,CAACC,aAAT,CAAuBX,OAAO,CAACS,GAA/B,CADF,GAEEG,MAJN;EAMA,IAAI,CAACJ,MAAL,EAAa;EAEbA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCN,OAAlC,EAA2CF,OAA3C;EAEAN,EAAE,CAACe,SAAH,GAAeC,MAAM,CAAChB,EAAE,CAACe,SAAJ,CAArB;EACAf,EAAE,CAACe,SAAH,CAAcb,KAAK,CAACe,OAAN,CAAeC,IAA7B,IAAqC;IACnCV,OADmC;IAEnCF,OAFmC;IAGnC;IACAG,MAAM,EAAEN,IAAI,GAAGgB,SAAH,GAAeV;EAJQ,CAArC;AAMD;AAED,SAASW,MAAT,CAAiBpB,EAAjB,EAAkCC,OAAlC,EAAiEC,KAAjE,EAA6E;;EAC3E,IAAI,EAAC,QAAE,CAACa,SAAH,MAAY,IAAZ,IAAYM,aAAZ,GAAY,MAAZ,GAAYA,GAAGnB,KAAK,CAACe,OAAN,CAAeC,IAAlB,CAAb,CAAJ,EAA0C;EAE1C,MAAM;IAAEV,OAAF;IAAWF,OAAX;IAAoBG,MAAM,GAAGT;EAA7B,IAAoCA,EAAE,CAACe,SAAH,CAAab,KAAK,CAACe,OAAN,CAAeC,IAA5B,CAA1C;EAEAT,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCd,OAArC,EAA8CF,OAA9C;EACA,OAAON,EAAE,CAACe,SAAH,CAAab,KAAK,CAACe,OAAN,CAAeC,IAA5B,CAAP;AACD;AAED,OAAO,MAAMK,MAAM,GAAG;EACpBxB,QADoB;EAEpBqB;AAFoB,CAAf;AAKP,eAAeG,MAAf","names":["inserted","el","binding","vnode","self","modifiers","value","options","passive","handler","target","arg","document","querySelector","window","addEventListener","_onScroll","Object","context","_uid","undefined","unbind","_a","removeEventListener","Scroll"],"sourceRoot":"","sources":["../../../src/directives/scroll/index.ts"],"sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions, VNode } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = Object(el._onScroll)\n  el._onScroll![vnode.context!._uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  if (!el._onScroll?.[vnode.context!._uid]) return\n\n  const { handler, options, target = el } = el._onScroll[vnode.context!._uid]!\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll[vnode.context!._uid]\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}