{"ast":null,"code":"import { upperFirst } from '../../util/helpers';\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height';\n  const offsetProperty = `offset${upperFirst(sizeProperty)}`;\n  return {\n    beforeEnter(el) {\n      el._parent = el.parentNode;\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty]\n      };\n    },\n    enter(el) {\n      const initialStyle = el._initialStyle;\n      el.style.setProperty('transition', 'none', 'important'); // Hide overflow to account for collapsed margins in the calculated height\n\n      el.style.overflow = 'hidden';\n      const offset = `${el[offsetProperty]}px`;\n      el.style[sizeProperty] = '0';\n      void el.offsetHeight; // force reflow\n\n      el.style.transition = initialStyle.transition;\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass);\n      }\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset;\n      });\n    },\n    afterEnter: resetStyles,\n    enterCancelled: resetStyles,\n    leave(el) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty]\n      };\n      el.style.overflow = 'hidden';\n      el.style[sizeProperty] = `${el[offsetProperty]}px`;\n      void el.offsetHeight; // force reflow\n\n      requestAnimationFrame(() => el.style[sizeProperty] = '0');\n    },\n    afterLeave,\n    leaveCancelled: afterLeave\n  };\n  function afterLeave(el) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass);\n    }\n    resetStyles(el);\n  }\n  function resetStyles(el) {\n    const size = el._initialStyle[sizeProperty];\n    el.style.overflow = el._initialStyle.overflow;\n    if (size != null) el.style[sizeProperty] = size;\n    delete el._initialStyle;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AAYA,eAAc,UAAWC,mBAAmB,GAAG,EAAjC,EAAqCC,CAAC,GAAG,KAAzC,EAA8C;EAC1D,MAAMC,YAAY,GAAGD,CAAC,GAAG,OAAH,GAAa,QAAnC;EACA,MAAME,cAAc,GAAG,SAASJ,UAAU,CAACG,YAAD,CAAc,EAAxD;EAEA,OAAO;IACLE,WAAW,CAAEC,EAAF,EAAuB;MAChCA,EAAE,CAACC,OAAH,GAAaD,EAAE,CAACE,UAAhB;MACAF,EAAE,CAACG,aAAH,GAAmB;QACjBC,UAAU,EAAEJ,EAAE,CAACK,KAAH,CAASD,UADJ;QAEjBE,QAAQ,EAAEN,EAAE,CAACK,KAAH,CAASC,QAFF;QAGjB,CAACT,YAAD,GAAgBG,EAAE,CAACK,KAAH,CAASR,YAAT;MAHC,CAAnB;IAKD,CARI;IAULU,KAAK,CAAEP,EAAF,EAAuB;MAC1B,MAAMQ,YAAY,GAAGR,EAAE,CAACG,aAAxB;MAEAH,EAAE,CAACK,KAAH,CAASI,WAAT,CAAqB,YAArB,EAAmC,MAAnC,EAA2C,WAA3C,EAH0B,CAI1B;;MACAT,EAAE,CAACK,KAAH,CAASC,QAAT,GAAoB,QAApB;MACA,MAAMI,MAAM,GAAG,GAAGV,EAAE,CAACF,cAAD,CAAgB,IAApC;MAEAE,EAAE,CAACK,KAAH,CAASR,YAAT,IAAyB,GAAzB;MAEA,KAAKG,EAAE,CAACW,YAAR,CAV0B,CAUL;;MAErBX,EAAE,CAACK,KAAH,CAASD,UAAT,GAAsBI,YAAY,CAACJ,UAAnC;MAEA,IAAIT,mBAAmB,IAAIK,EAAE,CAACC,OAA9B,EAAuC;QACrCD,EAAE,CAACC,OAAH,CAAWW,SAAX,CAAqBC,GAArB,CAAyBlB,mBAAzB;MACD;MAEDmB,qBAAqB,CAAC,MAAK;QACzBd,EAAE,CAACK,KAAH,CAASR,YAAT,IAAyBa,MAAzB;MACD,CAFoB,CAArB;IAGD,CA/BI;IAiCLK,UAAU,EAAEC,WAjCP;IAkCLC,cAAc,EAAED,WAlCX;IAoCLE,KAAK,CAAElB,EAAF,EAAuB;MAC1BA,EAAE,CAACG,aAAH,GAAmB;QACjBC,UAAU,EAAE,EADK;QAEjBE,QAAQ,EAAEN,EAAE,CAACK,KAAH,CAASC,QAFF;QAGjB,CAACT,YAAD,GAAgBG,EAAE,CAACK,KAAH,CAASR,YAAT;MAHC,CAAnB;MAMAG,EAAE,CAACK,KAAH,CAASC,QAAT,GAAoB,QAApB;MACAN,EAAE,CAACK,KAAH,CAASR,YAAT,IAAyB,GAAGG,EAAE,CAACF,cAAD,CAAgB,IAA9C;MACA,KAAKE,EAAE,CAACW,YAAR,CAT0B,CASL;;MAErBG,qBAAqB,CAAC,MAAOd,EAAE,CAACK,KAAH,CAASR,YAAT,IAAyB,GAAjC,CAArB;IACD,CAhDI;IAkDLsB,UAlDK;IAmDLC,cAAc,EAAED;EAnDX,CAAP;EAsDA,SAASA,UAAT,CAAqBnB,EAArB,EAA0C;IACxC,IAAIL,mBAAmB,IAAIK,EAAE,CAACC,OAA9B,EAAuC;MACrCD,EAAE,CAACC,OAAH,CAAWW,SAAX,CAAqBS,MAArB,CAA4B1B,mBAA5B;IACD;IACDqB,WAAW,CAAChB,EAAD,CAAX;EACD;EAED,SAASgB,WAAT,CAAsBhB,EAAtB,EAA2C;IACzC,MAAMsB,IAAI,GAAGtB,EAAE,CAACG,aAAH,CAAkBN,YAAlB,CAAb;IACAG,EAAE,CAACK,KAAH,CAASC,QAAT,GAAoBN,EAAE,CAACG,aAAH,CAAkBG,QAAtC;IACA,IAAIgB,IAAI,IAAI,IAAZ,EAAkBtB,EAAE,CAACK,KAAH,CAASR,YAAT,IAAyByB,IAAzB;IAClB,OAAOtB,EAAE,CAACG,aAAV;EACD;AACF","names":["upperFirst","expandedParentClass","x","sizeProperty","offsetProperty","beforeEnter","el","_parent","parentNode","_initialStyle","transition","style","overflow","enter","initialStyle","setProperty","offset","offsetHeight","classList","add","requestAnimationFrame","afterEnter","resetStyles","enterCancelled","leave","afterLeave","leaveCancelled","remove","size"],"sourceRoot":"","sources":["../../../src/components/transitions/expand-transition.ts"],"sourcesContent":["import { upperFirst } from '../../util/helpers'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = `offset${upperFirst(sizeProperty)}` as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    beforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    enter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle!\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    afterEnter: resetStyles,\n    enterCancelled: resetStyles,\n\n    leave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    afterLeave,\n    leaveCancelled: afterLeave,\n  }\n\n  function afterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle![sizeProperty]\n    el.style.overflow = el._initialStyle!.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}