{"ast":null,"code":"// Mixins\nimport Delayable from '../../mixins/delayable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nexport default mixins(Delayable, Toggleable\n/* @vue/component */).extend({\n  name: 'v-hover',\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: Boolean,\n      default: undefined\n    }\n  },\n  methods: {\n    onMouseEnter() {\n      this.runDelay('open');\n    },\n    onMouseLeave() {\n      this.runDelay('close');\n    }\n  },\n  render() {\n    if (!this.$scopedSlots.default && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this);\n      return null;\n    }\n    let element;\n    /* istanbul ignore else */\n\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        hover: this.isActive\n      });\n    }\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0];\n    }\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this);\n      return element;\n    }\n    if (!this.disabled) {\n      element.data = element.data || {};\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave\n      });\n    }\n    return element;\n  }\n});","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAKA,eAAeD,MAAM,CACnBF,SADmB,EAEnBC;AACA,qBAHa,CAIbG,MAJa,CAIN;EACPC,IAAI,EAAE,SADC;EAGPC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,OADE;MAERC,OAAO,EAAE;IAFD,CADL;IAKLC,KAAK,EAAE;MACLH,IAAI,EAAEC,OADD;MAELC,OAAO,EAAEE;IAFJ;EALF,CAHA;EAcPC,OAAO,EAAE;IACPC,YAAY;MACV,KAAKC,QAAL,CAAc,MAAd;IACD,CAHM;IAIPC,YAAY;MACV,KAAKD,QAAL,CAAc,OAAd;IACD;EANM,CAdF;EAuBPE,MAAM;IACJ,IAAI,CAAC,KAAKC,YAAL,CAAkBR,OAAnB,IAA8B,KAAKC,KAAL,KAAeC,SAAjD,EAA4D;MAC1DT,WAAW,CAAC,wDAAD,EAA2D,IAA3D,CAAX;MAEA,OAAO,IAAP;IACD;IAED,IAAIgB,OAAJ;IAEA;;IACA,IAAI,KAAKD,YAAL,CAAkBR,OAAtB,EAA+B;MAC7BS,OAAO,GAAG,KAAKD,YAAL,CAAkBR,OAAlB,CAA0B;QAAEU,KAAK,EAAE,KAAKC;MAAd,CAA1B,CAAV;IACD;IAED,IAAIC,KAAK,CAACC,OAAN,CAAcJ,OAAd,KAA0BA,OAAO,CAACK,MAAR,KAAmB,CAAjD,EAAoD;MAClDL,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAjB;IACD;IAED,IAAI,CAACA,OAAD,IAAYG,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAZ,IAAsC,CAACA,OAAO,CAACM,GAAnD,EAAwD;MACtDtB,WAAW,CAAC,8CAAD,EAAiD,IAAjD,CAAX;MAEA,OAAOgB,OAAP;IACD;IAED,IAAI,CAAC,KAAKZ,QAAV,EAAoB;MAClBY,OAAO,CAACO,IAAR,GAAeP,OAAO,CAACO,IAAR,IAAgB,EAA/B;MACA,KAAKC,EAAL,CAAQR,OAAO,CAACO,IAAhB,EAAsB;QACpBE,UAAU,EAAE,KAAKd,YADG;QAEpBe,UAAU,EAAE,KAAKb;MAFG,CAAtB;IAID;IAED,OAAOG,OAAP;EACD;AAxDM,CAJM,CAAf","names":["Delayable","Toggleable","mixins","consoleWarn","extend","name","props","disabled","type","Boolean","default","value","undefined","methods","onMouseEnter","runDelay","onMouseLeave","render","$scopedSlots","element","hover","isActive","Array","isArray","length","tag","data","_g","mouseenter","mouseleave"],"sourceRoot":"","sources":["../../../src/components/VHover/VHover.ts"],"sourcesContent":["// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\nexport default mixins(\n  Delayable,\n  Toggleable\n  /* @vue/component */\n).extend({\n  name: 'v-hover',\n\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  methods: {\n    onMouseEnter () {\n      this.runDelay('open')\n    },\n    onMouseLeave () {\n      this.runDelay('close')\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({ hover: this.isActive })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this)\n\n      return element as any\n    }\n\n    if (!this.disabled) {\n      element.data = element.data || {}\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave,\n      })\n    }\n\n    return element\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}