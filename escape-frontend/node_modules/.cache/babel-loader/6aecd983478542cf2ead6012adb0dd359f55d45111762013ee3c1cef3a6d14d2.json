{"ast":null,"code":"// Styles\nimport \"../../../src/components/VCard/VCard.sass\"; // Extensions\n\nimport VSheet from '../VSheet'; // Mixins\n\nimport Loadable from '../../mixins/loadable';\nimport Routable from '../../mixins/routable'; // Helpers\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Loadable, Routable, VSheet).extend({\n  name: 'v-card',\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4\n    },\n    raised: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this)\n      };\n    },\n    styles() {\n      const style = {\n        ...VSheet.options.computed.styles.call(this)\n      };\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`;\n      }\n      return style;\n    }\n  },\n  methods: {\n    genProgress() {\n      const render = Loadable.options.methods.genProgress.call(this);\n      if (!render) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress'\n      }, [render]);\n    }\n  },\n  render(h) {\n    const {\n      tag,\n      data\n    } = this.generateRouteLink();\n    data.style = this.styles;\n    if (this.isClickable) {\n      data.attrs = data.attrs || {};\n      data.attrs.tabindex = 0;\n    }\n    return h(tag, this.setBackgroundColor(this.color, data), [this.genProgress(), this.$slots.default]);\n  }\n});","map":{"version":3,"mappings":"AAAA;AACA,OAAO,0CAAP,C,CAEA;;AACA,OAAOA,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA;;AACA,eAAeA,MAAM,CACnBF,QADmB,EAEnBC,QAFmB,EAGnBF,MAHmB,CAAN,CAIbI,MAJa,CAIN;EACPC,IAAI,EAAE,QADC;EAGPC,KAAK,EAAE;IACLC,IAAI,EAAEC,OADD;IAELC,KAAK,EAAED,OAFF;IAGLE,GAAG,EAAEC,MAHA;IAILC,IAAI,EAAEJ,OAJD;IAKLK,YAAY,EAAE;MACZC,IAAI,EAAE,CAACC,MAAD,EAASJ,MAAT,CADM;MAEZK,OAAO,EAAE;IAFG,CALT;IASLC,MAAM,EAAET;EATH,CAHA;EAePU,QAAQ,EAAE;IACRC,OAAO;MACL,OAAO;QACL,UAAU,IADL;QAEL,GAAGjB,QAAQ,CAACkB,OAAT,CAAiBF,QAAjB,CAA0BC,OAA1B,CAAkCE,IAAlC,CAAuC,IAAvC,CAFE;QAGL,gBAAgB,KAAKd,IAHhB;QAIL,iBAAiB,KAAKE,KAJjB;QAKL,gBAAgB,KAAKa,WALhB;QAML,mBAAmB,KAAKC,OANnB;QAOL,oBAAoB,KAAKC,QAPpB;QAQL,kBAAkB,KAAKP,MARlB;QASL,GAAGjB,MAAM,CAACoB,OAAP,CAAeF,QAAf,CAAwBC,OAAxB,CAAgCE,IAAhC,CAAqC,IAArC;MATE,CAAP;IAWD,CAbO;IAcRI,MAAM;MACJ,MAAMC,KAAK,GAAuB;QAChC,GAAG1B,MAAM,CAACoB,OAAP,CAAeF,QAAf,CAAwBO,MAAxB,CAA+BJ,IAA/B,CAAoC,IAApC;MAD6B,CAAlC;MAIA,IAAI,KAAKX,GAAT,EAAc;QACZgB,KAAK,CAACC,UAAN,GAAmB,QAAQ,KAAKjB,GAAG,oCAAnC;MACD;MAED,OAAOgB,KAAP;IACD;EAxBO,CAfH;EA0CPE,OAAO,EAAE;IACPC,WAAW;MACT,MAAMC,MAAM,GAAG7B,QAAQ,CAACmB,OAAT,CAAiBQ,OAAjB,CAAyBC,WAAzB,CAAqCR,IAArC,CAA0C,IAA1C,CAAf;MAEA,IAAI,CAACS,MAAL,EAAa,OAAO,IAAP;MAEb,OAAO,KAAKC,cAAL,CAAoB,KAApB,EAA2B;QAChCC,WAAW,EAAE,kBADmB;QAEhCC,GAAG,EAAE;MAF2B,CAA3B,EAGJ,CAACH,MAAD,CAHI,CAAP;IAID;EAVM,CA1CF;EAuDPA,MAAM,CAAEI,CAAF,EAAG;IACP,MAAM;MAAEC,GAAF;MAAOC;IAAP,IAAgB,KAAKC,iBAAL,EAAtB;IAEAD,IAAI,CAACV,KAAL,GAAa,KAAKD,MAAlB;IAEA,IAAI,KAAKH,WAAT,EAAsB;MACpBc,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAL,IAAc,EAA3B;MACAF,IAAI,CAACE,KAAL,CAAWC,QAAX,GAAsB,CAAtB;IACD;IAED,OAAOL,CAAC,CAACC,GAAD,EAAM,KAAKK,kBAAL,CAAwB,KAAKC,KAA7B,EAAoCL,IAApC,CAAN,EAAiD,CACvD,KAAKP,WAAL,EADuD,EAEvD,KAAKa,MAAL,CAAY1B,OAF2C,CAAjD,CAAR;EAID;AArEM,CAJM,CAAf","names":["VSheet","Loadable","Routable","mixins","extend","name","props","flat","Boolean","hover","img","String","link","loaderHeight","type","Number","default","raised","computed","classes","options","call","isClickable","loading","disabled","styles","style","background","methods","genProgress","render","$createElement","staticClass","key","h","tag","data","generateRouteLink","attrs","tabindex","setBackgroundColor","color","$slots"],"sourceRoot":"","sources":["../../../src/components/VCard/VCard.ts"],"sourcesContent":["// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}