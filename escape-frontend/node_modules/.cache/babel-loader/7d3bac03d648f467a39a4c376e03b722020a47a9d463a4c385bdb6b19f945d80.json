{"ast":null,"code":"import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n        return value || typeof value === 'string';\n      });\n    }\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n});","map":{"version":3,"mappings":"AAAA,OAAO,0CAAP;AACA,OAAO,0CAAP;AAEA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA;;AACA,eAAeD,IAAI,CAAC,WAAD,CAAJ,CAAkBE,MAAlB,CAAyB;EACtCC,IAAI,EAAE,aADgC;EAEtCC,UAAU,EAAE,IAF0B;EAGtCC,KAAK,EAAE;IACLC,EAAE,EAAEC,MADC;IAELC,GAAG,EAAE;MACHC,IAAI,EAAEF,MADH;MAEHG,OAAO,EAAE;IAFN,CAFA;IAMLC,KAAK,EAAE;MACLF,IAAI,EAAEG,OADD;MAELF,OAAO,EAAE;IAFJ;EANF,CAH+B;EActCG,MAAM,CAAEC,CAAF,EAAK;IAAET,KAAF;IAASU,IAAT;IAAeC;EAAf,CAAL,EAA8B;IAClC,IAAIC,OAAJ;IACA,MAAM;MAAEC;IAAF,IAAYH,IAAlB;IACA,IAAIG,KAAJ,EAAW;MACT;MACAH,IAAI,CAACG,KAAL,GAAa,EAAb;MACAD,OAAO,GAAGE,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0BC,GAAG,IAAG;QACxC;QACA;QACA,IAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,KAAP;QAEpB,MAAMC,KAAK,GAAGL,KAAK,CAACI,GAAD,CAAnB,CALwC,CAOxC;QACA;;QACA,IAAIA,GAAG,CAACE,UAAJ,CAAe,OAAf,CAAJ,EAA6B;UAC3BT,IAAI,CAACG,KAAL,CAAYI,GAAZ,IAAmBC,KAAnB;UACA,OAAO,KAAP;QACD;QAED,OAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAAjC;MACD,CAfS,CAAV;IAgBD;IAED,IAAIlB,KAAK,CAACC,EAAV,EAAc;MACZS,IAAI,CAACU,QAAL,GAAgBV,IAAI,CAACU,QAAL,IAAiB,EAAjC;MACAV,IAAI,CAACU,QAAL,CAAcnB,EAAd,GAAmBD,KAAK,CAACC,EAAzB;IACD;IAED,OAAOQ,CAAC,CACNT,KAAK,CAACG,GADA,EAENP,SAAS,CAACc,IAAD,EAAO;MACdW,WAAW,EAAE,WADC;MAEdC,KAAK,EAAEC,KAAK,CAAM;QAChB,oBAAoBvB,KAAK,CAACM;MADV,CAAN,CAAL,CAEJkB,MAFI,CAEGZ,OAAO,IAAI,EAFd;IAFO,CAAP,CAFH,EAQND,QARM,CAAR;EAUD;AArDqC,CAAzB,CAAf","names":["Grid","mergeData","extend","name","functional","props","id","String","tag","type","default","fluid","Boolean","render","h","data","children","classes","attrs","Object","keys","filter","key","value","startsWith","domProps","staticClass","class","Array","concat"],"sourceRoot":"","sources":["../../../src/components/VGrid/VContainer.ts"],"sourcesContent":["import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}