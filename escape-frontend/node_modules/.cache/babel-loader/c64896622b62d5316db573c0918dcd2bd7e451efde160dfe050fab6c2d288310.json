{"ast":null,"code":"import { keys } from '../../util/helpers';\nconst handleGesture = wrapper => {\n  const {\n    touchstartX,\n    touchendX,\n    touchstartY,\n    touchendY\n  } = wrapper;\n  const dirRatio = 0.5;\n  const minDistance = 16;\n  wrapper.offsetX = touchendX - touchstartX;\n  wrapper.offsetY = touchendY - touchstartY;\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && touchendX < touchstartX - minDistance && wrapper.left(wrapper);\n    wrapper.right && touchendX > touchstartX + minDistance && wrapper.right(wrapper);\n  }\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && touchendY < touchstartY - minDistance && wrapper.up(wrapper);\n    wrapper.down && touchendY > touchstartY + minDistance && wrapper.down(wrapper);\n  }\n};\nfunction touchstart(event, wrapper) {\n  const touch = event.changedTouches[0];\n  wrapper.touchstartX = touch.clientX;\n  wrapper.touchstartY = touch.clientY;\n  wrapper.start && wrapper.start(Object.assign(event, wrapper));\n}\nfunction touchend(event, wrapper) {\n  const touch = event.changedTouches[0];\n  wrapper.touchendX = touch.clientX;\n  wrapper.touchendY = touch.clientY;\n  wrapper.end && wrapper.end(Object.assign(event, wrapper));\n  handleGesture(wrapper);\n}\nfunction touchmove(event, wrapper) {\n  const touch = event.changedTouches[0];\n  wrapper.touchmoveX = touch.clientX;\n  wrapper.touchmoveY = touch.clientY;\n  wrapper.move && wrapper.move(Object.assign(event, wrapper));\n}\nfunction createHandlers(value) {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end\n  };\n  return {\n    touchstart: e => touchstart(e, wrapper),\n    touchend: e => touchend(e, wrapper),\n    touchmove: e => touchmove(e, wrapper)\n  };\n}\nfunction inserted(el, binding, vnode) {\n  const value = binding.value;\n  const target = value.parent ? el.parentElement : el;\n  const options = value.options || {\n    passive: true\n  }; // Needed to pass unit tests\n\n  if (!target) return;\n  const handlers = createHandlers(binding.value);\n  target._touchHandlers = Object(target._touchHandlers);\n  target._touchHandlers[vnode.context._uid] = handlers;\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName], options);\n  });\n}\nfunction unbind(el, binding, vnode) {\n  const target = binding.value.parent ? el.parentElement : el;\n  if (!target || !target._touchHandlers) return;\n  const handlers = target._touchHandlers[vnode.context._uid];\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName]);\n  });\n  delete target._touchHandlers[vnode.context._uid];\n}\nexport const Touch = {\n  inserted,\n  unbind\n};\nexport default Touch;","map":{"version":3,"mappings":"AACA,SAASA,IAAT,QAAqB,oBAArB;AAaA,MAAMC,aAAa,GAAIC,OAAD,IAA0B;EAC9C,MAAM;IAAEC,WAAF;IAAeC,SAAf;IAA0BC,WAA1B;IAAuCC;EAAvC,IAAqDJ,OAA3D;EACA,MAAMK,QAAQ,GAAG,GAAjB;EACA,MAAMC,WAAW,GAAG,EAApB;EACAN,OAAO,CAACO,OAAR,GAAkBL,SAAS,GAAGD,WAA9B;EACAD,OAAO,CAACQ,OAAR,GAAkBJ,SAAS,GAAGD,WAA9B;EAEA,IAAIM,IAAI,CAACC,GAAL,CAASV,OAAO,CAACQ,OAAjB,IAA4BH,QAAQ,GAAGI,IAAI,CAACC,GAAL,CAASV,OAAO,CAACO,OAAjB,CAA3C,EAAsE;IACpEP,OAAO,CAACW,IAAR,IAAiBT,SAAS,GAAGD,WAAW,GAAGK,WAA3C,IAA2DN,OAAO,CAACW,IAAR,CAAaX,OAAb,CAA3D;IACAA,OAAO,CAACY,KAAR,IAAkBV,SAAS,GAAGD,WAAW,GAAGK,WAA5C,IAA4DN,OAAO,CAACY,KAAR,CAAcZ,OAAd,CAA5D;EACD;EAED,IAAIS,IAAI,CAACC,GAAL,CAASV,OAAO,CAACO,OAAjB,IAA4BF,QAAQ,GAAGI,IAAI,CAACC,GAAL,CAASV,OAAO,CAACQ,OAAjB,CAA3C,EAAsE;IACpER,OAAO,CAACa,EAAR,IAAeT,SAAS,GAAGD,WAAW,GAAGG,WAAzC,IAAyDN,OAAO,CAACa,EAAR,CAAWb,OAAX,CAAzD;IACAA,OAAO,CAACc,IAAR,IAAiBV,SAAS,GAAGD,WAAW,GAAGG,WAA3C,IAA2DN,OAAO,CAACc,IAAR,CAAad,OAAb,CAA3D;EACD;AACF,CAhBD;AAkBA,SAASe,UAAT,CAAqBC,KAArB,EAAwChB,OAAxC,EAA6D;EAC3D,MAAMiB,KAAK,GAAGD,KAAK,CAACE,cAAN,CAAqB,CAArB,CAAd;EACAlB,OAAO,CAACC,WAAR,GAAsBgB,KAAK,CAACE,OAA5B;EACAnB,OAAO,CAACG,WAAR,GAAsBc,KAAK,CAACG,OAA5B;EAEApB,OAAO,CAACqB,KAAR,IACErB,OAAO,CAACqB,KAAR,CAAcC,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBhB,OAArB,CAAd,CADF;AAED;AAED,SAASwB,QAAT,CAAmBR,KAAnB,EAAsChB,OAAtC,EAA2D;EACzD,MAAMiB,KAAK,GAAGD,KAAK,CAACE,cAAN,CAAqB,CAArB,CAAd;EACAlB,OAAO,CAACE,SAAR,GAAoBe,KAAK,CAACE,OAA1B;EACAnB,OAAO,CAACI,SAAR,GAAoBa,KAAK,CAACG,OAA1B;EAEApB,OAAO,CAACyB,GAAR,IACEzB,OAAO,CAACyB,GAAR,CAAYH,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBhB,OAArB,CAAZ,CADF;EAGAD,aAAa,CAACC,OAAD,CAAb;AACD;AAED,SAAS0B,SAAT,CAAoBV,KAApB,EAAuChB,OAAvC,EAA4D;EAC1D,MAAMiB,KAAK,GAAGD,KAAK,CAACE,cAAN,CAAqB,CAArB,CAAd;EACAlB,OAAO,CAAC2B,UAAR,GAAqBV,KAAK,CAACE,OAA3B;EACAnB,OAAO,CAAC4B,UAAR,GAAqBX,KAAK,CAACG,OAA3B;EAEApB,OAAO,CAAC6B,IAAR,IAAgB7B,OAAO,CAAC6B,IAAR,CAAaP,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBhB,OAArB,CAAb,CAAhB;AACD;AAED,SAAS8B,cAAT,CAAyBC,KAAzB,EAA6C;EAC3C,MAAM/B,OAAO,GAAG;IACdC,WAAW,EAAE,CADC;IAEdE,WAAW,EAAE,CAFC;IAGdD,SAAS,EAAE,CAHG;IAIdE,SAAS,EAAE,CAJG;IAKduB,UAAU,EAAE,CALE;IAMdC,UAAU,EAAE,CANE;IAOdrB,OAAO,EAAE,CAPK;IAQdC,OAAO,EAAE,CARK;IASdG,IAAI,EAAEoB,KAAK,CAACpB,IATE;IAUdC,KAAK,EAAEmB,KAAK,CAACnB,KAVC;IAWdC,EAAE,EAAEkB,KAAK,CAAClB,EAXI;IAYdC,IAAI,EAAEiB,KAAK,CAACjB,IAZE;IAadO,KAAK,EAAEU,KAAK,CAACV,KAbC;IAcdQ,IAAI,EAAEE,KAAK,CAACF,IAdE;IAedJ,GAAG,EAAEM,KAAK,CAACN;EAfG,CAAhB;EAkBA,OAAO;IACLV,UAAU,EAAGiB,CAAD,IAAmBjB,UAAU,CAACiB,CAAD,EAAIhC,OAAJ,CADpC;IAELwB,QAAQ,EAAGQ,CAAD,IAAmBR,QAAQ,CAACQ,CAAD,EAAIhC,OAAJ,CAFhC;IAGL0B,SAAS,EAAGM,CAAD,IAAmBN,SAAS,CAACM,CAAD,EAAIhC,OAAJ;EAHlC,CAAP;AAKD;AAED,SAASiC,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAkEC,KAAlE,EAA8E;EAC5E,MAAML,KAAK,GAAGI,OAAO,CAACJ,KAAtB;EACA,MAAMM,MAAM,GAAGN,KAAK,CAACO,MAAN,GAAeJ,EAAE,CAACK,aAAlB,GAAkCL,EAAjD;EACA,MAAMM,OAAO,GAAGT,KAAK,CAACS,OAAN,IAAiB;IAAEC,OAAO,EAAE;EAAX,CAAjC,CAH4E,CAK5E;;EACA,IAAI,CAACJ,MAAL,EAAa;EAEb,MAAMK,QAAQ,GAAGZ,cAAc,CAACK,OAAO,CAACJ,KAAT,CAA/B;EACAM,MAAM,CAACM,cAAP,GAAwBrB,MAAM,CAACe,MAAM,CAACM,cAAR,CAA9B;EACAN,MAAM,CAACM,cAAP,CAAuBP,KAAK,CAACQ,OAAN,CAAeC,IAAtC,IAA8CH,QAA9C;EAEA5C,IAAI,CAAC4C,QAAD,CAAJ,CAAeI,OAAf,CAAuBC,SAAS,IAAG;IACjCV,MAAM,CAACW,gBAAP,CAAwBD,SAAxB,EAAmCL,QAAQ,CAACK,SAAD,CAA3C,EAAyEP,OAAzE;EACD,CAFD;AAGD;AAED,SAASS,MAAT,CAAiBf,EAAjB,EAAkCC,OAAlC,EAAgEC,KAAhE,EAA4E;EAC1E,MAAMC,MAAM,GAAGF,OAAO,CAACJ,KAAR,CAAeO,MAAf,GAAwBJ,EAAE,CAACK,aAA3B,GAA2CL,EAA1D;EACA,IAAI,CAACG,MAAD,IAAW,CAACA,MAAM,CAACM,cAAvB,EAAuC;EAEvC,MAAMD,QAAQ,GAAGL,MAAM,CAACM,cAAP,CAAsBP,KAAK,CAACQ,OAAN,CAAeC,IAArC,CAAjB;EACA/C,IAAI,CAAC4C,QAAD,CAAJ,CAAeI,OAAf,CAAuBC,SAAS,IAAG;IACjCV,MAAM,CAACa,mBAAP,CAA2BH,SAA3B,EAAsCL,QAAQ,CAACK,SAAD,CAA9C;EACD,CAFD;EAGA,OAAOV,MAAM,CAACM,cAAP,CAAsBP,KAAK,CAACQ,OAAN,CAAeC,IAArC,CAAP;AACD;AAED,OAAO,MAAMM,KAAK,GAAG;EACnBlB,QADmB;EAEnBgB;AAFmB,CAAd;AAKP,eAAeE,KAAf","names":["keys","handleGesture","wrapper","touchstartX","touchendX","touchstartY","touchendY","dirRatio","minDistance","offsetX","offsetY","Math","abs","left","right","up","down","touchstart","event","touch","changedTouches","clientX","clientY","start","Object","assign","touchend","end","touchmove","touchmoveX","touchmoveY","move","createHandlers","value","e","inserted","el","binding","vnode","target","parent","parentElement","options","passive","handlers","_touchHandlers","context","_uid","forEach","eventName","addEventListener","unbind","removeEventListener","Touch"],"sourceRoot":"","sources":["../../../src/directives/touch/index.ts"],"sourcesContent":["import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}